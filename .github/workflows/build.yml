name: build
on: [push, pull_request]
jobs:
  build-win:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        build_type: [Release]
        enable_ui: [on]
        include:
          - os: windows-latest
            build_type: Release
            enable_ui: on
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1
      if: ${{ runner.os == 'macOS' }}
      with:
        key: ${{ matrix.os }}-${{ matrix.enable_ui }}-${{ matrix.build_type }}
    - uses: seanmiddleditch/gha-setup-ninja@master
    - uses: ilammy/msvc-dev-cmd@v1
    - name: Workaround for windows-2022 and cmake 3.25.0
      shell: bash
      run: rm -rf C:/Strawberry/
    - name: Generating Makefiles
      shell: bash
      run: |
        export enable_ccache=off
        curl -L https://github.com/aseprite/skia/releases/latest/download/Skia-Windows-Release-x64.zip --output skia.zip
        7z x skia.zip -oskia
        cmake -S . -B build -G Ninja \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DENABLE_UI=${{ matrix.enable_ui }} \
          -DENABLE_CCACHE=$enable_ccache \
          -DLAF_BACKEND=skia \
          -DSKIA_DIR=./skia \
          -DSKIA_LIBRARY_DIR=./skia/out/Release-x64 \
          -DSKIA_LIBRARY=./skia/out/Release-x64/skia.lib
    - name: Compiling
      shell: bash
      run: |
        cd build && ninja
    - name: 打包
      shell: bash
      run: |
        GITHUB_REPOSITORY="${{ github.repository }}"
        REPO_NAME="${GITHUB_REPOSITORY#${{ github.repository_owner }}/}"

        cd D:/a/$REPO_NAME/$REPO_NAME/build/bin/
        7z a -tzip aseprite-win-zip data aseprite.exe
        cp aseprite-win-zip D:/a/
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.3
      with:
        path: D:/a/aseprite-win-zip
  build-mac:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        build_type: [Release]
        enable_ui: [on]
        include:
          - os: macos-latest
            build_type: Release
            enable_ui: on
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1
      with:
        key: ${{ matrix.os }}-${{ matrix.enable_ui }}-${{ matrix.build_type }}
    - name: Generating Makefiles
      shell: bash
      run: |
        brew install ninja
        pip install lastversion
        export enable_ccache=on
        wget -q -O skia.zip https://github.com/aseprite/skia/releases/latest/download/Skia-macOS-Release-x64.zip
        7z x skia.zip -y -oskia | grep ing
        mkdir build
        cd build
        cmake \
          -DCMAKE_BUILD_TYPE=RelWithDebInfo \
          -DCMAKE_OSX_ARCHITECTURES=x86_64 \
          -DCMAKE_OSX_DEPLOYMENT_TARGET=10.9 \
          -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk \
          -DLAF_BACKEND=skia \
          -DSKIA_DIR=${{ steps.path.outputs.working_path }}/skia \
          -DSKIA_LIBRARY_DIR=${{ steps.path.outputs.working_path }}/skia/out/Release-x64 \
          -DSKIA_LIBRARY=${{ steps.path.outputs.working_path }}/skia/out/Release-x64/libskia.a \
          -G Ninja \
          -Wno-dev \
          ..
    - name: Compiling
      shell: bash
      run: |
        cd build && ninja
    - name: 打包
      shell: bash
      run: |
        cd build/bin
        7z -tzip a aseprite-mac-x64.zip * -mx0 | grep ing
        cd ../..
        mv build/bin/aseprite-mac-x64.zip .
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.3
      with:
         path: aseprite-mac-x64.zip
  Upload:
    needs: [build-win,  build-mac]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Download artifacts
      uses: actions/download-artifact@v2
    - name: Get tag
      run: echo "::set-output name=atb::$(cat release-versions/version.json)"
      id: links
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.links.outputs.atb }}
        name: Aseprite ${{ steps.links.outputs.atb }}
        draft: true
        prerelease: false
        files: |
          artifact/aseprite-win-zip
          artifact/aseprite-mac-x64.zip
        body: |
          Unofficial dev release.
          Support [official version](https://www.aseprite.org/download)
      env:
        GITHUB_TOKEN: ${{ secrets.work1 }}
